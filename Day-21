#include <bits/stdc++.h>
using namespace std;
class Solution {
  public:
  int func(vector<int> & arr, int maxPages){
      int students =1;
      int pagesSum =0;
      for(int pages: arr){
          if(pagesSum + pages > maxPages){
              students++;
              pagesSum = pages;
          }
          else{
              pagesSum += pages;
          }
      }
      return students;
  }
  
    int findPages(vector<int> &arr, int k) {
        // code here
        if(arr.size()<k){
            return -1;
        }
        int low = *max_element(arr.begin(), arr.end());
       int high = accumulate(arr.begin(),arr.end(),0);
       while(low<= high){
           int mid = low + (high-low)/2;
           int noOfStudents= func(arr,mid);
           if(noOfStudents>k){
               low=mid+1;
           }
           else{
               high = mid -1;
           }
       }
       return low;
    }
};



int main() {
    int test_case;
    cin >> test_case;
    cin.ignore();
    while (test_case--) {

        int d;
        vector<int> arr, brr, crr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        getline(cin, input);
        ss.clear();
        ss.str(input);
        while (ss >> number) {
            crr.push_back(number);
        }
        d = crr[0];
        int n = arr.size();
        Solution ob;
        int ans = ob.findPages(arr, d);
        cout << ans << endl;

        cout << "~"
             << "\n";
    }
    return 0;
}
